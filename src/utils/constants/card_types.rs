// src/utils/constants/card_types.rs

#[derive(Debug, Clone, Eq, PartialEq, Hash)]
pub enum CardType {
    Artifact,
    Battle,
    Conspiracy,
    Creature,
    Dungeon,
    Enchantment,
    Instant,
    Kindred,
    Land,
    Phenomenon,
    Plane,
    Planeswalker,
    Scheme,
    Sorcery,
    Vanguard
}

// supertypes
#[derive(Debug, Clone, Eq, PartialEq, Hash)]
pub enum Supertype {
    Basic,
    Legendary,
    Ongoing,
    Snow,
    World
}

// Subtypes -- by type to enforce rule 205.3d (inappropriate subtypes cannot be added to a card with a given type-- you can't have a "Creature - Adventure" for example, since
// Adventure is a subtype of Instants and Sorceries)

// full subtype enum -- see below for specific subtypes
#[derive(Debug, Clone, Eq, PartialEq, Hash)]
pub enum Subtype {
    // Each variant contains the specific subtype enum
    Artifact(ArtifactType),
    Enchantment(EnchantmentType),
    Land(LandType),
    Creature(CreatureType),
    Planeswalker(PlaneswalkerType),
    Spell(SpellType),
    Planar(PlanarType),
    Dungeon(DungeonType),
    Battle(BattleType),
}

// Artifacts
#[derive(Debug, Clone, Eq, PartialEq, Hash)]
pub enum ArtifactType {
    Attraction,
    Blood,
    Bobblehead,
    Clue,
    Contraption,
    Equipment,
    Food,
    Fortification,
    Gold,
    Incubator, 
    Junk, 
    Map, 
    Powerstone, 
    Treasure, 
    Vehicle
}

// Enchantments
#[derive(Debug, Clone, Eq, PartialEq, Hash)]
pub enum EnchantmentType {
    Aura,
    Background,
    Cartouche,
    Case,
    Class,
    Curse,
    Role,
    Room,
    Rune,
    Saga,
    Shard,
    Shrine
}


// Lands -- there's an extra subtype here, Basic Lands
#[derive(Debug, Clone, Eq, PartialEq, Hash)]
pub enum BasicLandType {
    Forest,
    Island, 
    Mountain,
    Plains,
    Swamp,
}

#[derive(Debug, Clone, Eq, PartialEq, Hash)]
pub enum LandType {
    Basic(BasicLandType),
    Cave,
    Desert,
    Gate,
    Lair,
    Locus,
    Mine,
    PowerPlant, // NOTE: Officially in the rules this is "Power-Plant" but the hyphen doesn't work in Rust enums -- only card that currently has this subtype is Urza's Power-Plant
    Sphere,
    Tower,
    Urzas // NOTE: Officially in the rules this is "Urza's" but the apostrophe doesn't work in Rust enums
}


// Planeswalkers
#[derive(Debug, Clone, Eq, PartialEq, Hash)]
pub enum PlaneswalkerType {
    Ajani, 
    Aminatou, 
    Angrath, 
    Arlinn, 
    Ashiok, 
    Bahamut, 
    Basri, 
    Bolas, 
    Calix, 
    Chandra, 
    Comet, 
    Dack, 
    Dakkon, 
    Daretti, 
    Davriel, 
    Dihada, 
    Domri, 
    Dovin, 
    Ellywick, 
    Elminster, 
    Elspeth, 
    Estrid, 
    Freyalise, 
    Garruk, 
    Gideon, 
    Grist, 
    Guff, 
    Huatli, 
    Jace, 
    Jared, 
    Jaya, 
    Jeska, 
    Kaito, 
    Karn, 
    Kasmina, 
    Kaya, 
    Kiora, 
    Koth, 
    Liliana, 
    Lolth, 
    Lukka, 
    Minsc, 
    Mordenkainen, 
    Nahiri, 
    Narset, 
    Niko, 
    Nissa, 
    Nixilis, 
    Oko, 
    Quintorius, 
    Ral, 
    Rowan, 
    Saheeli, 
    Samut, 
    Sarkhan, 
    Serra, 
    Sivitri, 
    Sorin, 
    Szat, 
    Tamiyo, 
    Tasha, 
    Teferi, 
    Teyo, 
    Tezzeret, 
    Tibalt, 
    Tyvar, 
    Ugin, 
    Urza, 
    Venser, 
    Vivien, 
    Vraska, 
    Vronos, 
    Will, 
    Windgrace, 
    Wrenn, 
    Xenagos, 
    Yanggu, 
    Yanling, 
    Zariel
}



// Instants and Sorceries
#[derive(Debug, Clone, Eq, PartialEq, Hash)]
pub enum SpellType {
    Adventure,
    Arcane,
    Lesson,
    Omen,
    Trap
}

// Creatures
#[derive(Debug, Clone, Eq, PartialEq, Hash)]
pub enum CreatureType {
    Advisor, 
    Aetherborn, 
    Alien, 
    Ally, 
    Angel, 
    Antelope, 
    Ape, 
    Archer, 
    Archon, 
    Armadillo, 
    Army, 
    Artificer, 
    Assassin, 
    AssemblyWorker, // NOTE: In official rules this is "Assembly-Worker" but the hyphen doesn't work in Rust enums
    Astartes, 
    Atog, 
    Aurochs, 
    Avatar, 
    Azra, 
    Badger, 
    Balloon, 
    Barbarian, 
    Bard, 
    Basilisk, 
    Bat, 
    Bear, 
    Beast, 
    Beaver, 
    Beeble, 
    Beholder, 
    Berserker, 
    Bird, 
    Blinkmoth, 
    Boar, 
    Bringer, 
    Brushwagg, 
    Camarid, 
    Camel, 
    Capybara, 
    Caribou, 
    Carrier, 
    Cat, 
    Centaur, 
    Child, 
    Chimera, 
    Citizen, 
    Cleric, 
    Clown, 
    Cockatrice, 
    Construct, 
    Coward, 
    Coyote, 
    Crab, 
    Crocodile, 
    Ctan, // NOTE: In official rules this is "C'tan" but the apostrophe doesn't work in Rust enums
    Custodes, 
    Cyberman, 
    Cyclops, 
    Dalek, 
    Dauthi, 
    Demigod, 
    Demon, 
    Deserter, 
    Detective, 
    Devil, 
    Dinosaur, 
    Djinn, 
    Doctor, 
    Dog, 
    Dragon, 
    Drake, 
    Dreadnought, 
    Drone, 
    Druid, 
    Dryad, 
    Dwarf, 
    Efreet, 
    Egg, 
    Elder, 
    Eldrazi, 
    Elemental, 
    Elephant, 
    Elf, 
    Elk, 
    Employee, 
    Eye, 
    Faerie, 
    Ferret, 
    Fish, 
    Flagbearer, 
    Fox, 
    Fractal, 
    Frog, 
    Fungus, 
    Gamer, 
    Gargoyle, 
    Germ, 
    Giant, 
    Gith, 
    Glimmer, 
    Gnoll, 
    Gnome, 
    Goat, 
    Goblin, 
    God, 
    Golem, 
    Gorgon, 
    Graveborn, 
    Gremlin, 
    Griffin, 
    Guest, 
    Hag, 
    Halfling, 
    Hamster, 
    Harpy, 
    Hellion, 
    Hippo, 
    Hippogriff, 
    Homarid, 
    Homunculus, 
    Horror, 
    Horse, 
    Human, 
    Hydra, 
    Hyena, 
    Illusion, 
    Imp, 
    Incarnation, 
    Inkling, 
    Inquisitor, 
    Insect, 
    Jackal, 
    Jellyfish,
    Juggernaut, 
    Kavu, 
    Kirin, 
    Kithkin, 
    Knight, 
    Kobold, 
    Kor, 
    Kraken, 
    Llama, 
    Lamia, 
    Lammasu, 
    Leech, 
    Leviathan, 
    Lhurgoyf, 
    Licid, 
    Lizard, 
    Manticore, 
    Masticore, 
    Mercenary, 
    Merfolk, 
    Metathran, 
    Minion, 
    Minotaur, 
    Mite, 
    Mole, 
    Monger, 
    Mongoose, 
    Monk, 
    Monkey, 
    Moonfolk, 
    Mount, 
    Mouse, 
    Mutant, 
    Myr, 
    Mystic, 
    Nautilus, 
    Necron, 
    Nephilim, 
    Nightmare, 
    Nightstalker, 
    Ninja, 
    Noble, 
    Noggle, 
    Nomad, 
    Nymph, 
    Octopus, 
    Ogre, 
    Ooze, 
    Orb, 
    Orc, 
    Orgg, 
    Otter, 
    Ouphe, 
    Ox, 
    Oyster, 
    Pangolin, 
    Peasant, 
    Pegasus, 
    Pentavite, 
    Performer, 
    Pest, 
    Phelddagrif, 
    Phoenix, 
    Phyrexian, 
    Pilot, 
    Pincher, 
    Pirate, 
    Plant, 
    Porcupine, 
    Possum, 
    Praetor, 
    Primarch, 
    Prism, 
    Processor, 
    Rabbit, 
    Raccoon, 
    Ranger, 
    Rat, 
    Rebel, 
    Reflection, 
    Rhino, 
    Rigger, 
    Robot, 
    Rogue, 
    Sable, 
    Salamander, 
    Samurai, 
    Sand, 
    Saproling, 
    Satyr, 
    Scarecrow, 
    Scientist, 
    Scion, 
    Scorpion, 
    Scout, 
    Sculpture, 
    Seal, 
    Serf, 
    Serpent, 
    Servo, 
    Shade, 
    Shaman, 
    Shapeshifter, 
    Shark, 
    Sheep, 
    Siren, 
    Skeleton, 
    Skunk, 
    Slith, 
    Sliver, 
    Sloth, 
    Slug, 
    Snail, 
    Snake, 
    Soldier, 
    Soltari, 
    Spawn, 
    Specter, 
    Spellshaper, 
    Sphinx, 
    Spider, 
    Spike, 
    Spirit, 
    Splinter, 
    Sponge, 
    Squid, 
    Squirrel, 
    Starfish, 
    Surrakar, 
    Survivor, 
    Synth, 
    Tentacle, 
    Tetravite, 
    Thalakos, 
    Thopter, 
    Thrull, 
    Tiefling,
    TimeLord, // NOTE: In official rules this is "Time Lord" but the space doesn't work in Rust enums
    Toy, 
    Treefolk, 
    Trilobite, 
    Triskelavite, 
    Troll, 
    Turtle, 
    Tyranid, 
    Unicorn, 
    Vampire, 
    Varmint, 
    Vedalken, 
    Volver, 
    Wall, 
    Walrus, 
    Warlock, 
    Warrior, 
    Weasel, 
    Weird, 
    Werewolf, 
    Whale, 
    Wizard, 
    Wolf, 
    Wolverine, 
    Wombat, 
    Worm, 
    Wraith, 
    Wurm, 
    Yeti, 
    Zombie,
    Zubera
}

// Plane subtypes (for Planechase)
#[derive(Debug, Clone, Eq, PartialEq, Hash)]
pub enum PlanarType {
    TheAbyss, // NOTE: In official rules this is "The Abyss" but the space doesn't work in Rust enums
    Alara,
    AlfavaMetraxis, // NOTE: In official rules this is "Alfava Metron" but the space doesn't work in Rust enums
    Amonkhet,
    AndrozaniMinor, // NOTE: In official rules this is "Androzani Minor" but the space doesn't work in Rust enums
    Antausia,
    Apalapucia,
    Arcavios,
    Arkhos,
    Avishkar,
    Azgol,
    Belenon,
    BolassMeditationRealm, // NOTE: In official rules this is "Bolas's Meditation Realm" but the apostrophe and spaces don't work in Rust enums
    Capenna,
    Cridhe,
    TheDalekAsylum, // NOTE: In official rules this is "The Dalek Asylum" but the spaces don't work in Rust enums
    Darillium,
    Dominaria,
    Earth,
    Echoir,
    Eldraine,
    Equilor,
    Ergamon,
    Fabacin,
    Fiora,
    Gallifrey,
    Gargantikar,
    Gobakhan,
    HorseheadNebula, // NOTE: In official rules this is "Horsehead Nebula" but the space doesn't work in Rust enums
    Ikoria,
    Innistrad,
    Iquatana,
    Ir,
    Ixalan,
    Kaldheim,
    Kamigawa,
    Kandoka,
    Karsus,
    Kephalai,
    Kinshala,
    Kolbahan,
    Kylem,
    Kyneth,
    TheLibrary, // NOTE: In official rules this is "The Library" but the space doesn't work in Rust enums
    Lorwyn,
    Luvion,
    Mars,
    Mercadia,
    Mirrodin,
    Moag,
    Mongseng,
    Moon,
    Muraganda,
    Necros,
    NewEarth, // NOTE: In official rules this is "New Earth" but the space doesn't work in Rust enums
    NewPhyrexia, // NOTE: In official rules this is "New Phyrexia" but the space doesn't work in Rust enums
    OutsideMuttersSpiral, // NOTE: In official rules this is "Outside Mutter's Spiral" but the apostrophe and space doesn't work in Rust enums
    Phyrexia,
    Pyrulea,
    Rabiah,
    Rath,
    Ravnica,
    Regatha,
    Segovia,
    SerrasRealm, // NOTE: In official rules this is "Serra's Realm" but the apostrophe and space doesn't work in Rust enums
    Shadowmoor,
    Shandalar,
    Shenmeng,
    Skaro,
    Spacecraft,
    Tarkir,
    Theros,
    Time,
    Trenzalore,
    Ulgrotha,
    UnknownPlanet, // NOTE: In official rules this is "Unknown Planet" but the space doesn't work in Rust enums
    Valla,
    Vryn,
    Wildfire,
    Xerex,
    Zendikar,
    Zhalfir
}

// Dungeon types (so far only one)
#[derive(Debug, Clone, Eq, PartialEq, Hash)]
pub enum DungeonType {
    Undercity
}

// Battle types (currently just Siege)
#[derive(Debug, Clone, Eq, PartialEq, Hash)]
pub enum BattleType {
    Siege
}
